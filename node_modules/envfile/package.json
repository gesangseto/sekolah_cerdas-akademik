{
  "_from": "envfile",
  "_id": "envfile@6.2.0",
  "_inBundle": false,
  "_integrity": "sha512-uBtjfjCuBa3HNHsMV3NB17/sZMNMLmdSWHczoGnvB9bAJanoZXjyKoWqEv30qN98Bk0F/sR3pFwOSjcxwnI6+w==",
  "_location": "/envfile",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "envfile",
    "name": "envfile",
    "escapedName": "envfile",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/envfile/-/envfile-6.2.0.tgz",
  "_shasum": "d4830fc6bf551cbdf86c2652e491c70927cfe9e5",
  "_spec": "envfile",
  "_where": "C:\\Users\\Gesang\\Desktop\\Sekolah Cerdas\\App API\\Akademik",
  "author": {
    "name": "2013+ Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "badges": {
    "list": [
      "travisci",
      "npmversion",
      "npmdownloads",
      "daviddm",
      "daviddmdev",
      "---",
      "githubsponsors",
      "patreon",
      "flattr",
      "liberapay",
      "buymeacoffee",
      "opencollective",
      "crypto",
      "paypal",
      "wishlist"
    ],
    "config": {
      "githubSponsorsUsername": "balupton",
      "buymeacoffeeUsername": "balupton",
      "cryptoURL": "https://bevry.me/crypto",
      "flattrUsername": "balupton",
      "liberapayUsername": "bevry",
      "opencollectiveUsername": "bevry",
      "patreonUsername": "bevry",
      "paypalURL": "https://bevry.me/paypal",
      "wishlistURL": "https://bevry.me/wishlist",
      "travisTLD": "com",
      "githubUsername": "bevry",
      "githubRepository": "envfile",
      "githubSlug": "bevry/envfile",
      "npmPackageName": "envfile"
    }
  },
  "bin": {
    "envfile": "bin.js"
  },
  "browser": "edition-browsers/index.js",
  "bugs": {
    "url": "https://github.com/bevry/envfile/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    },
    {
      "name": "andyedwardsdfdl",
      "url": "https://github.com/andyedwardsdfdl"
    }
  ],
  "deprecated": false,
  "description": "Parse and stringify the environment configuration files and format, also known as .env files and dotenv files",
  "devDependencies": {
    "@bevry/update-contributors": "^1.7.0",
    "@typescript-eslint/eslint-plugin": "^2.34.0",
    "@typescript-eslint/parser": "^2.34.0",
    "assert-helpers": "^6.6.0",
    "eslint": "^7.0.0",
    "eslint-config-bevry": "^3.6.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.3",
    "kava": "^5.2.0",
    "prettier": "^2.0.5",
    "projectz": "^2.3.0",
    "safeps": "^10.2.0",
    "surge": "^0.21.3",
    "typedoc": "^0.17.7",
    "typescript": "^3.9.3",
    "valid-directory": "^2.1.0",
    "valid-module": "^1.2.0"
  },
  "editions": [
    {
      "description": "TypeScript source code with Import for modules",
      "directory": "source",
      "entry": "index.ts",
      "tags": [
        "typescript",
        "import"
      ],
      "engines": false
    },
    {
      "description": "TypeScript compiled against ESNext for Node.js with Require for modules",
      "directory": "edition-esnext",
      "entry": "index.js",
      "tags": [
        "javascript",
        "esnext",
        "require"
      ],
      "engines": {
        "node": "10 || 12 || 13 || 14",
        "browsers": false
      }
    },
    {
      "description": "TypeScript compiled against ES2019 for web browsers with Import for modules",
      "directory": "edition-browsers",
      "entry": "index.js",
      "tags": [
        "javascript",
        "import"
      ],
      "engines": {
        "node": false,
        "browsers": "defaults"
      }
    }
  ],
  "engines": {
    "node": ">=10"
  },
  "eslintConfig": {
    "extends": [
      "bevry"
    ]
  },
  "funding": "https://bevry.me/fund",
  "homepage": "https://github.com/bevry/envfile",
  "keywords": [
    ".env",
    "browser",
    "config",
    "configuration",
    "dotenv",
    "env",
    "envfile",
    "module",
    "node",
    "typed",
    "types",
    "typescript"
  ],
  "license": "MIT",
  "main": "edition-esnext/index.js",
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    }
  ],
  "module": "edition-browsers/index.js",
  "name": "envfile",
  "prettier": {
    "semi": false,
    "singleQuote": true
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bevry/envfile.git"
  },
  "scripts": {
    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
    "our:compile": "npm run our:compile:edition-browsers && npm run our:compile:edition-esnext && npm run our:compile:types",
    "our:compile:edition-browsers": "tsc --module ESNext --target ES2019 --outDir ./edition-browsers --project tsconfig.json && ( test ! -d edition-browsers/source || ( mv edition-browsers/source edition-temp && rm -Rf edition-browsers && mv edition-temp edition-browsers ) )",
    "our:compile:edition-esnext": "tsc --module commonjs --target ESNext --outDir ./edition-esnext --project tsconfig.json && ( test ! -d edition-esnext/source || ( mv edition-esnext/source edition-temp && rm -Rf edition-esnext && mv edition-temp edition-esnext ) )",
    "our:compile:types": "tsc --project tsconfig.json --emitDeclarationOnly --declaration --declarationMap --declarationDir ./compiled-types && ( test ! -d compiled-types/source || ( mv compiled-types/source edition-temp && rm -Rf compiled-types && mv edition-temp compiled-types ) )",
    "our:deploy": "echo no need for this project",
    "our:meta": "npm run our:meta:contributors && npm run our:meta:docs && npm run our:meta:projectz",
    "our:meta:contributors": "update-contributors",
    "our:meta:docs": "npm run our:meta:docs:typedoc",
    "our:meta:docs:typedoc": "rm -Rf ./docs && typedoc --mode file --exclude '**/+(*test*|node_modules)' --excludeExternals --name \"$npm_package_name\" --readme ./README.md --out ./docs ./source",
    "our:meta:projectz": "projectz compile",
    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
    "our:release:check-dirty": "git diff --exit-code",
    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
    "our:release:push": "git push origin master && git push origin --tags",
    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
    "our:setup": "npm run our:setup:install",
    "our:setup:install": "npm install",
    "our:test": "npm run our:verify && npm test",
    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint && npm run our:verify:module && npm run our:verify:prettier",
    "our:verify:directory": "valid-directory",
    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
    "our:verify:module": "valid-module",
    "our:verify:prettier": "prettier --write .",
    "test": "node ./edition-esnext/test.js"
  },
  "type": "commonjs",
  "types": "./compiled-types/",
  "version": "6.2.0"
}
